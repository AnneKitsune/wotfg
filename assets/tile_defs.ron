
pub struct TileDefinition {
    pub key: Tiles,
    pub mining_level: Option<u32>,
    pub chopping_level: Option<u32>,
    pub explosion_level: Option<u32>,
    pub gather_time: f32,
    pub drops: Vec<(Items, usize)>,
    pub character: char,
    pub icon: Option<String>,
}

// TODO move to tile definition once minigene has proper color support.
impl From<Tiles> for ColorPair {
    fn from(t: Tiles) -> Self {
        match t {
            Tiles::Air => ' ',
            Tiles::Grass => '.',
            Tiles::GrassLong => ',',
            Tiles::Border => 'b',
            Tiles::Bedrock => 'B',
            Tiles::Tree => 'T',
            Tiles::Rock => 'o',
            Tiles::SeliOre => '-',
            Tiles::GemStoneOre => '^',
            Tiles::Stone => '0',
        }
    }
}
